int mod(int x, int y){
    return(x - x / y * y);
}
int is_prime(int x){
    int i;
    i = 2;
    if (x == 2)
        return (1);
    do {
        if (mod(x, i) == 0)
            return (0);
        i = i + 1;
    }while (i * i < x);
    return (1);
}
void prime_factorization(int n){
    int i, first;
    i = 2;
    first = 0;
    if (n == 1){
        printf("1");
        return ;
    }
    do {
        if (is_prime(i) == 1) {
            if (mod(n, i) == 0){
                do {
                    n = n / i;
                    if (first == 0)
                        printf("*");
                    first = 1;
                    printf(i);
                } while (mod(n, i) == 0);
            }
        }
        i = i + 1;
    } while(i * i < n)

    if (n != 1){
        if (first == 0)
            printf("*");
        printf(n);
    }
}

void prime_factorization_test(){
    int n;
    printf("prime_factorization: Please input a unsigned positive integer(<2^31-1) ?");
    scanf(n);
    do {
        if (n < 0){
            printf("Input error, again:");
            scanf(n);
        }
    }while (n < 0)
    printf("The factor of n is\n");
    prime_factorization(n); printf("\n");
}

void main(){
    prime_factorization_test();
}